<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.stofkat.battleround</groupId>
		<artifactId>battleround</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>battleround-html</artifactId>
	<packaging>war</packaging>
	<name>GWT and server</name>

	<dependencies>
		<dependency>
			<groupId>org.stofkat.battleround</groupId>
			<artifactId>battleround-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.stofkat.battleround</groupId>
		    <artifactId>battleround-database</artifactId>
		    <version>${project.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.stofkat.battleround</groupId>
		    <artifactId>battleround-common</artifactId>
		    <version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.badlogicgames.gdx</groupId>
			<artifactId>gdx-backend-gwt</artifactId>
			<version>${gdx.version}</version>
		</dependency>

		<dependency>
			<groupId>org.stofkat.battleround</groupId>
			<artifactId>battleround-core</artifactId>
			<version>${project.version}</version>
			<classifier>sources</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.badlogicgames.gdx</groupId>
			<artifactId>gdx</artifactId>
			<version>${gdx.version}</version>
			<classifier>sources</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.badlogicgames.gdx</groupId>
			<artifactId>gdx-backend-gwt</artifactId>
			<version>${gdx.version}</version>
			<classifier>sources</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.11</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.11</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-servlet</artifactId>
			<version>3.0</version>
		</dependency>
		
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Compile/runtime dependencies -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>1.9.17</version>
        </dependency>
	</dependencies>

	<build>
		 <resources>
			<resource>
				<directory>${project.basedir}/src/main/java</directory>
				<filtering>true</filtering>
				<includes>
				    <include>**/*.java</include>
				    <!-- This isn't neccesary as the gwt.xml files aren't in the resources. But maybe we should move them there in the future. -->
					<include>**/*.gwt.xml</include>
				</includes>
			</resource>
		</resources>
		
		<!-- for hot reload of the web application
		-->
        <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
        
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.maven.version}</version>
				<configuration>
					<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
					<runTarget>index.html</runTarget>
					<!-- On this page of the gwt maven plugin site I found this:
						http://mojo.codehaus.org/gwt-maven-plugin/examples/compile.html
						That showed how to include multiple GWT modules in your build.
					 -->
					<modules>
					    <module>org.stofkat.battleround.GwtLauncher</module>
					    <module>org.stofkat.battleround.LevelDesigner</module>
					</modules>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- PRE APP ENGINE <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webappDirectory>${project.build.directory}/webapp</webappDirectory>
				</configuration>
			</plugin>-->
			
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archiveClasses>true</archiveClasses>
                    <webResources>
                        <!-- in order to interpolate version from pom into appengine-web.xml -->
                        <resource>
                            <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF</targetPath>
                        </resource>
                    </webResources>
	                <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
                </configuration>
            </plugin>

			<!-- PRE APP ENGINE allows testing of HTML backend via: mvn integration-test -Phtml 
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.0.0.v20110901</version>
				<configuration>
					<webApp>${project.basedir}/target/webapp</webApp>
				</configuration>
				<executions>
					<execution>
						<id>test-html</id>
						<phase>integration-test</phase>
						<goals>
							<goal>run-exploded</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			
			<!-- App engine 
			-->
			<plugin>
                <groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>1.9.19</version>
                <configuration>
                    <enableJarClasses>false</enableJarClasses>
                    <address>0.0.0.0</address>
                    <port>8080</port>
                    <jvmFlags>
                      <jvmFlag>-agentlib:jdwp=transport=dt_socket,address=1044,server=y,suspend=n</jvmFlag>
                    </jvmFlags> 
                </configuration>
            </plugin>
		</plugins>
	</build>
</project>
